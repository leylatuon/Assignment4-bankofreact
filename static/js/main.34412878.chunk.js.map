{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","Math","round","this","props","accountBalance","toFixed","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","creditAmount","creditInfo","map","credit","date","slice","amount","description","id","addCredit","step","Debits","debitAmount","debitInfo","debit","addDebit","App","logInInfo","newUser","currentUser","event","Date","getFullYear","getMonth","getDate","prevState","creditList","Number","debitList","a","debitAPI","axios","get","response","i","data","length","console","log","status","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4SAOMA,E,4JAEJ,WACE,OACE,6CACaC,KAAKC,MAAgC,IAA1BC,KAAKC,MAAMC,gBAAoB,KAAKC,QAAQ,U,GAL7CC,aAWdP,ICTTQ,E,4JACJ,WACE,OACE,gCACE,qBAAKC,IAAI,gCAAgCC,IAAI,SAE7C,+CAEA,cAAC,IAAD,CAAMC,GAAG,eAAT,0BACA,uBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,mBACA,uBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,qBACA,uBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,oBACA,uBAAK,uBACL,cAAC,EAAD,CAAgBN,eAAgBF,KAAKC,MAAMC,wB,GAhBhCE,aAsBJC,ICtBTI,E,4JACJ,WACE,OACE,gCACE,8CAEA,6CAAgBT,KAAKC,MAAMS,YAC3B,iDAAoBV,KAAKC,MAAMU,eAC/B,uBACA,cAAC,IAAD,CAAMH,GAAG,IAAT,mC,GATkBJ,aAeXK,IC0CAG,E,kDAvDb,WAAaX,GAAQ,IAAD,8BAClB,cAAMA,IAYRY,aAAe,SAACC,GACd,IAAMC,EAAW,eAAO,EAAKC,MAAMC,MACnCF,EAAYL,SAAWI,EAAEI,OAAOC,MAChC,EAAKC,SAAS,CAACH,KAAMF,KAhBH,EAoBpBM,aAAe,SAACP,GACdA,EAAEQ,iBACF,EAAKrB,MAAMsB,UAAU,EAAKP,MAAMC,MAChC,EAAKG,SAAS,CAACI,UAAU,KArBzB,EAAKR,MAAQ,CACXC,KAAM,CAEJP,SAAU,EAAKT,MAAMgB,KAAKP,SAC1Be,SAAU,IAEZD,UAAU,GARM,E,0CA0BpB,WAEE,OAAIxB,KAAKgB,MAAMQ,SACL,cAAC,IAAD,CAAUhB,GAAG,iBAKrB,gCACE,uCAEA,uBAAMkB,SAAU1B,KAAKqB,aAArB,UACE,gCACE,8CACA,uBAAOM,KAAK,OAAOC,KAAK,WAAWC,aAAc7B,KAAKC,MAAMgB,KAAKP,SAAUoB,SAAU9B,KAAKa,kBAE5F,gCACE,6CACA,uBAAOc,KAAK,WAAWC,KAAK,gBAE9B,+CAEF,uBACA,cAAC,IAAD,CAAMpB,GAAG,IAAT,mC,GAlDYJ,aC4BL2B,EA/BC,SAAC9B,GAaf,OACE,gCACE,4CAAeH,KAAKC,MAAyB,IAAnBE,EAAM+B,cAAkB,KAAK7B,QAAQ,MAC/D,4CAAeL,KAAKC,MAA2B,IAArBE,EAAMC,gBAAoB,KAAKC,QAAQ,MAd5CF,EAAfgC,WACUC,KAAI,SAACC,GAErB,IAAIC,EAAOD,EAAOC,KAAKC,MAAM,EAAG,IAChC,OACE,+BACGF,EAAOG,OADV,IACmBH,EAAOI,YAD1B,IACwCH,IAD/BD,EAAOK,OAalB,uBAAMd,SAAUzB,EAAMwC,UAAtB,0BACe,uBAAOd,KAAK,OAAOC,KAAK,gBADvC,WAEU,uBAAOD,KAAK,SAASe,KAAK,OAAOd,KAAK,WAC9C,wBAAQD,KAAK,SAAb,2BAEF,uBACA,cAAC,IAAD,CAAMnB,GAAG,IAAT,gCCQSmC,EAjCA,SAAC1C,GAed,OACE,gCACE,2CAAcH,KAAKC,MAAwB,IAAlBE,EAAM2C,aAAiB,KAAKzC,QAAQ,MAC7D,4CAAeL,KAAKC,MAA2B,IAArBE,EAAMC,gBAAoB,KAAKC,QAAQ,MAf7CF,EAAd4C,UACSX,KAAI,SAACY,GAEpB,IAAIV,EAAOU,EAAMV,KAAKC,MAAM,EAAG,IAC/B,OACE,+BACGS,EAAMR,OADT,IACkBQ,EAAMP,YADxB,IACsCH,IAD7BU,EAAMN,OAcjB,uBAAMd,SAAUzB,EAAM8C,SAAtB,0BACe,uBAAOpB,KAAK,OAAOC,KAAK,gBADvC,WAEU,uBAAOD,KAAK,SAASe,KAAK,OAAOd,KAAK,WAC9C,wBAAQD,KAAK,SAAb,0BAEF,uBACA,cAAC,IAAD,CAAMnB,GAAG,IAAT,gCCpBAwC,E,kDACJ,aAAe,IAAD,8BAEZ,gBAmCFzB,UAAY,SAAC0B,GACX,IAAMC,EAAO,eAAQ,EAAKlC,MAAMmC,aAChCD,EAAQxC,SAAWuC,EAAUvC,SAC7B,EAAKU,SAAS,CAAE+B,YAAaD,KAxCjB,EA2CdT,UAAY,SAACW,GACXA,EAAM9B,iBACN,IAAMc,EAAO,IAAIiB,KACblB,EAAS,CAAC,YAAeiB,EAAMlC,OAAO,GAAGC,MAAO,OAAUiC,EAAMlC,OAAO,GAAGC,MAAO,KAAQiB,EAAKkB,cAAgB,IAAMlB,EAAKmB,WAAa,IAAMnB,EAAKoB,WACrJ,EAAKpC,UAAS,SAACqC,GAAD,MAAgB,CAC5BC,WAAW,CAAEvB,GAAH,mBAAcsB,EAAUC,aAClC1B,aAAcyB,EAAUzB,aAAe2B,OAAOP,EAAMlC,OAAO,GAAGC,OAC9DjB,eAAgBuD,EAAUvD,eAAiByD,OAAOP,EAAMlC,OAAO,GAAGC,YAlDxD,EAsDd4B,SAAW,SAACK,GACVA,EAAM9B,iBACN,IAAMc,EAAO,IAAIiB,KACbP,EAAQ,CAAC,YAAeM,EAAMlC,OAAO,GAAGC,MAAM,OAAUiC,EAAMlC,OAAO,GAAGC,MAAM,KAAQiB,EAAKkB,cAAgB,IAAMlB,EAAKmB,WAAa,IAAMnB,EAAKoB,WAClJ,EAAKpC,UAAS,SAACqC,GAAD,MAAgB,CAC5BG,UAAU,CAAEd,GAAH,mBAAaW,EAAUG,YAChChB,YAAaa,EAAUb,YAAce,OAAOP,EAAMlC,OAAO,GAAGC,OAC5DjB,eAAgBuD,EAAUvD,eAAiByD,OAAOP,EAAMlC,OAAO,GAAGC,YA1DpE,EAAKH,MAAQ,CACXd,eAAgB,EAChB8B,aAAc,EACd0B,WAAY,GACZd,YAAa,EACbgB,UAAW,GACXT,YAAa,CACXzC,SAAU,YACVC,YAAa,aAXL,E,4FAgBd,kCAAAkD,EAAA,4DACoB,wCACZC,EAAW,uCAFnB,kBAIyBC,IAAMC,IAHX,yCADpB,OAKI,IADIC,EAJR,OAKYC,EAAI,EAAGA,EAAID,EAASE,KAAKC,OAAQF,IACvClE,KAAKoB,SAAS,CAAEsC,WAAYO,EAASE,KAAMjE,eAAgBF,KAAKgB,MAAMd,eAAiB+D,EAASE,KAAKD,GAAG5B,OAAQN,aAAchC,KAAKgB,MAAMgB,aAAeiC,EAASE,KAAKD,GAAG5B,SAN/K,gBAQqByB,IAAMC,IAAIF,GAR/B,OASI,IADAG,EARJ,OASYC,EAAI,EAAGA,EAAID,EAASE,KAAKC,OAAQF,IACvClE,KAAKoB,SAAS,CAAEwC,UAAWK,EAASE,KAAMjE,eAAgBF,KAAKgB,MAAMd,eAAiB+D,EAASE,KAAKD,GAAG5B,OAAQM,YAAa5C,KAAKgB,MAAM4B,YAAcqB,EAASE,KAAKD,GAAG5B,SAV5K,kDAaQ,KAAM2B,WACRI,QAAQC,IAAI,KAAML,SAASE,MAC3BE,QAAQC,IAAI,KAAML,SAASM,SAfjC,0D,0EAkDA,WAAU,IAAD,OAkBP,OACE,cAAC,IAAD,CAAQC,SAAS,2BAAjB,SACE,gCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAnBN,kBACpB,cAAC,EAAD,CAAMzE,eAAgB,EAAKc,MAAMd,oBAmB7B,cAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,eAAeC,OAjBV,kBAC3B,cAAC,EAAD,CACEjE,SAAU,EAAKM,MAAMmC,YAAYzC,SACjCC,YAAa,EAAKK,MAAMmC,YAAYxC,iBAelC,cAAC,IAAD,CAAO8D,OAAK,EAACC,KAAK,SAASC,OAZV,kBACrB,cAAC,EAAD,CAAO1D,KAAM,EAAKD,MAAMmC,YAAa5B,UAAW,EAAKA,eAYjD,cAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,WAAWC,OATV,kBAAM,cAAC,EAAD,CAASzE,eAAgB,EAAKc,MAAMd,eAAgBuC,UAAa,EAAKA,UAAWT,aAAc,EAAKhB,MAAMgB,aAAcC,WAAY,EAAKjB,MAAM0C,gBAUxK,cAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,UAAUC,OAXV,kBAAM,cAAC,EAAD,CAAQzE,eAAgB,EAAKc,MAAMd,eAAgB6C,SAAY,EAAKA,SAAUH,YAAa,EAAK5B,MAAM4B,YAAaC,UAAW,EAAK7B,MAAM4C,wB,GAjFzJxD,aAmGH4C,ICvGA4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCIdQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BZ,M","file":"static/js/main.34412878.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {(Math.round(this.props.accountBalance*100)/100).toFixed(2)}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits</Link>\n        <br/>\n        <Link to=\"/debits\">Debits</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}  // Create an object for state\n    updatedUser.userName = e.target.value  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","/*==================================================\nsrc/components/Credits.js\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { Link } from \"react-router-dom\";\n\nconst Credits = (props) => {\n  let creditsView = () => {\n    const { creditInfo } = props;\n    return creditInfo.map((credit) => {\n      // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = credit.date.slice(0, 10);\n      return (\n        <li key={credit.id}>\n          {credit.amount} {credit.description} {date}\n        </li>\n      );\n    });\n  };\n  return (\n    <div>\n      <h1>Credits: {(Math.round(props.creditAmount*100)/100).toFixed(2)}</h1>\n      <h2>Balance: {(Math.round(props.accountBalance*100)/100).toFixed(2)}</h2>\n\n      {creditsView()}\n\n      <form onSubmit={props.addCredit}>\n        Description: <input type=\"text\" name=\"description\" />\n        Amount: <input type=\"number\" step=\"0.01\" name=\"amount\" />\n        <button type=\"submit\">Add Credit</button>\n      </form>\n      <br />\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n};\n\nexport default Credits;","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { Link } from \"react-router-dom\";\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debitInfo } = props;\n    return debitInfo.map((debit) => {\n      // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0, 10);\n      return (\n        <li key={debit.id}>\n          {debit.amount} {debit.description} {date}\n        </li>\n      );\n    });\n  };\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits: {(Math.round(props.debitAmount*100)/100).toFixed(2)}</h1>\n      <h2>Balance: {(Math.round(props.accountBalance*100)/100).toFixed(2)}</h2>\n\n      {debitsView()}\n\n      <form onSubmit={props.addDebit}>\n        Description: <input type=\"text\" name=\"description\" />\n        Amount: <input type=\"number\" step=\"0.01\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br />\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n};\n\nexport default Debits;\n","/*==================================================\nsrc/App.js\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// Import other components\nimport Home from \"./components/Home\";\nimport UserProfile from \"./components/UserProfile\";\nimport LogIn from \"./components/Login\";\nimport Credits from \"./components/Credits\";\nimport Debits from \"./components/Debits\";\n\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n    this.state = {\n      accountBalance: 0,\n      creditAmount: 0,\n      creditList: [],\n      debitAmount: 0,\n      debitList: [],\n      currentUser: {\n        userName: \"Joe Smith\",\n        memberSince: \"11/22/99\",\n      },\n    };\n  }\n\n  async componentDidMount() {\n    const creditAPI = \"https://moj-api.herokuapp.com/credits\";\n    const debitAPI = \"https://moj-api.herokuapp.com/debits\";\n    try {\n      let response = await axios.get(creditAPI);\n      for(let i = 0; i < response.data.length; i++){\n        this.setState({ creditList: response.data, accountBalance: this.state.accountBalance + response.data[i].amount, creditAmount: this.state.creditAmount + response.data[i].amount });\n      }\n      response = await axios.get(debitAPI);\n      for(let i = 0; i < response.data.length; i++){\n        this.setState({ debitList: response.data, accountBalance: this.state.accountBalance - response.data[i].amount, debitAmount: this.state.debitAmount - response.data[i].amount });\n      }\n    } catch (error) {\n      if (error.response) {\n        console.log(error.response.data);\n        console.log(error.response.status);\n      }\n    }\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {\n    const newUser = { ...this.state.currentUser };\n    newUser.userName = logInInfo.userName;\n    this.setState({ currentUser: newUser });\n  };\n\n  addCredit = (event) => {\n    event.preventDefault();\n    const date = new Date();\n    let credit = {\"description\": event.target[0].value, \"amount\": event.target[1].value, \"date\": date.getFullYear() + '-' + date.getMonth() + '-' + date.getDate()};\n    this.setState((prevState) => ({\n      creditList: [credit, ...prevState.creditList],\n      creditAmount: prevState.creditAmount + Number(event.target[1].value),\n      accountBalance: prevState.accountBalance + Number(event.target[1].value)\n    }))\n  }\n\n  addDebit = (event) => {\n    event.preventDefault();\n    const date = new Date();\n    let debit = {\"description\": event.target[0].value,\"amount\": event.target[1].value,\"date\": date.getFullYear() + '-' + date.getMonth() + '-' + date.getDate()};\n    this.setState((prevState) => ({\n      debitList: [debit, ...prevState.debitList],\n      debitAmount: prevState.debitAmount - Number(event.target[1].value),\n      accountBalance: prevState.accountBalance - Number(event.target[1].value)\n    }))\n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => (\n      <Home accountBalance={this.state.accountBalance} />\n    );\n    const UserProfileComponent = () => (\n      <UserProfile\n        userName={this.state.currentUser.userName}\n        memberSince={this.state.currentUser.memberSince}\n      />\n    );\n    const LogInComponent = () => (\n      <LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />\n    );\n    const DebitsComponent = () => <Debits accountBalance={this.state.accountBalance} addDebit = {this.addDebit} debitAmount={this.state.debitAmount} debitInfo={this.state.debitList} />;\n    const CreditsComponent = () => <Credits accountBalance={this.state.accountBalance} addCredit = {this.addCredit} creditAmount={this.state.creditAmount} creditInfo={this.state.creditList} />;\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/Assignment4-bankofreact\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent} />\n          <Route exact path=\"/userProfile\" render={UserProfileComponent} />\n          <Route exact path=\"/login\" render={LogInComponent} />\n          <Route exact path=\"/credits\" render={CreditsComponent} />\n          <Route exact path=\"/debits\" render={DebitsComponent} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}