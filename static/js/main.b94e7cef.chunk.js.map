{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","Debits","debits","map","debit","date","slice","amount","description","id","addDebit","App","logInInfo","newUser","currentUser","credits","creditsLoaded","debitsLoaded","fetch","then","res","json","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"yPAOMA,E,4JAEJ,WACE,OACE,4CACYC,KAAKC,MAAMC,sB,GALAC,aAWdJ,ICTTK,E,4JACJ,WACE,OACE,gCACE,qBAAKC,IAAI,gCAAgCC,IAAI,SAE7C,+CAEA,cAAC,IAAD,CAAMC,GAAG,eAAT,0BACA,uBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,mBACA,uBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,2DACA,uBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,0DACA,uBAAK,uBACL,cAAC,EAAD,CAAgBL,eAAgBF,KAAKC,MAAMC,wB,GAhBhCC,aAsBJC,ICtBTI,E,4JACJ,WACE,OACE,gCACE,8CAEA,6CAAgBR,KAAKC,MAAMQ,YAC3B,iDAAoBT,KAAKC,MAAMS,eAC/B,uBACA,cAAC,IAAD,CAAMH,GAAG,IAAT,mC,GATkBJ,aAeXK,IC0CAG,E,kDAvDb,WAAaV,GAAQ,IAAD,8BAClB,cAAMA,IAYRW,aAAe,SAACC,GACd,IAAMC,EAAW,eAAO,EAAKC,MAAMC,MACnCF,EAAYL,SAAWI,EAAEI,OAAOC,MAChC,EAAKC,SAAS,CAACH,KAAMF,KAhBH,EAoBpBM,aAAe,SAACP,GACdA,EAAEQ,iBACF,EAAKpB,MAAMqB,UAAU,EAAKP,MAAMC,MAChC,EAAKG,SAAS,CAACI,UAAU,KArBzB,EAAKR,MAAQ,CACXC,KAAM,CAEJP,SAAU,EAAKR,MAAMe,KAAKP,SAC1Be,SAAU,IAEZD,UAAU,GARM,E,0CA0BpB,WAEE,OAAIvB,KAAKe,MAAMQ,SACL,cAAC,IAAD,CAAUhB,GAAG,iBAKrB,gCACE,uCAEA,uBAAMkB,SAAUzB,KAAKoB,aAArB,UACE,gCACE,8CACA,uBAAOM,KAAK,OAAOC,KAAK,WAAWC,aAAc5B,KAAKC,MAAMe,KAAKP,SAAUoB,SAAU7B,KAAKY,kBAE5F,gCACE,6CACA,uBAAOc,KAAK,WAAWC,KAAK,gBAE9B,+CAEF,uBACA,cAAC,IAAD,CAAMpB,GAAG,IAAT,mC,GAlDYJ,aCQL2B,EAVC,SAAC7B,GACf,OACE,gCACE,yCACA,uBACA,cAAC,IAAD,CAAMM,GAAG,IAAT,gCC2BSwB,EAhCA,SAAC9B,GAed,OACE,gCACE,wCAdiBA,EAAX+B,OACMC,KAAI,SAACC,GAEjB,IAAIC,EAAOD,EAAMC,KAAKC,MAAM,EAAG,IAC/B,OACE,+BACGF,EAAMG,OADT,IACkBH,EAAMI,YADxB,IACsCH,IAD7BD,EAAMK,OAajB,uBAAMd,SAAUxB,EAAMuC,SAAtB,UACE,uBAAOd,KAAK,OAAOC,KAAK,gBACxB,uBAAOD,KAAK,SAASC,KAAK,WAC1B,wBAAQD,KAAK,SAAb,0BAEF,uBACA,cAAC,IAAD,CAAMnB,GAAG,IAAT,gCCiDSkC,E,kDAnEb,aAAe,IAAD,8BAEZ,gBA0BFnB,UAAY,SAACoB,GACX,IAAMC,EAAO,eAAQ,EAAK5B,MAAM6B,aAChCD,EAAQlC,SAAWiC,EAAUjC,SAC7B,EAAKU,SAAS,CAAEyB,YAAaD,KA5B7B,EAAK5B,MAAQ,CACXb,eAAgB,WAChB2C,QAAS,GACTb,OAAQ,GACRc,eAAe,EACfC,cAAc,EACdH,YAAa,CACXnC,SAAU,YACVC,YAAa,aAXL,E,qDAgBd,WAAqB,IAAD,OAClBsC,MAAM,wCACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GACL,EAAKhC,SAAS,CACZa,OAAQmB,EACRJ,cAAc,S,oBAatB,WAAU,IAAD,OAkBP,OACE,cAAC,IAAD,CAAQK,SAAS,2BAAjB,SACE,gCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAnBN,kBACpB,cAAC,EAAD,CAAMrD,eAAgB,EAAKa,MAAMb,oBAmB7B,cAAC,IAAD,CAAOmD,OAAK,EAACC,KAAK,eAAeC,OAjBV,kBAC3B,cAAC,EAAD,CACE9C,SAAU,EAAKM,MAAM6B,YAAYnC,SACjCC,YAAa,EAAKK,MAAM6B,YAAYlC,iBAelC,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,SAASC,OAZV,kBACrB,cAAC,EAAD,CAAOvC,KAAM,EAAKD,MAAM6B,YAAatB,UAAW,EAAKA,eAYjD,cAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,WAAWC,OAVV,kBAAM,cAAC,EAAD,CAASV,QAAS,EAAK9B,MAAM8B,aAWtD,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,UAAUC,OAVV,kBAAM,cAAC,EAAD,CAAQvB,OAAQ,EAAKjB,MAAMiB,qB,GAnD3C7B,aCJHqD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCIdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BX,M","file":"static/js/main.b94e7cef.chunk.js","sourcesContent":["/*==================================================\nsrc/components/AccountBalance.js\n\nThe AccountBalance component displays account balance. It is included in other page views.\n==================================================*/\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n  // Display account balance\n  render() {\n    return (\n      <div>\n        Balance: {this.props.accountBalance}\n      </div>\n    );\n  }\n}\n\nexport default AccountBalance;","/*==================================================\nsrc/components/Home.js\n\nThe Home component is used to demonstrate the use of Link.\n==================================================*/\nimport React, {Component} from 'react';\nimport AccountBalance from './AccountBalance';\nimport {Link} from 'react-router-dom';\n\nclass Home extends Component {\n  render() {\n    return (\n      <div>\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\n\n        <h1>Bank of React</h1>\n\n        <Link to=\"/userProfile\">User Profile</Link>\n        <br/>\n        <Link to=\"/login\">Login</Link>\n        <br/>\n        <Link to=\"/credits\">Credits (to be implemented in the Assignment)</Link>\n        <br/>\n        <Link to=\"/debits\">Debits (to be implemented in the Assignment)</Link>\n        <br/><br/>\n        <AccountBalance accountBalance={this.props.accountBalance}/>\n      </div>\n    );\n  }\n}\n\nexport default Home;","/*==================================================\nsrc/components/UserProfile.js\n\nThe UserProfile component is used to demonstrate the use of Route and Link.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component {\n  render() {\n    return (\n      <div>\n        <h1>User Profile</h1>\n\n        <div>Username: {this.props.userName}</div>\n        <div>Member Since: {this.props.memberSince}</div>\n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;","/*==================================================\nsrc/components/Login.js\n\nThe LogIn component is used to demonstrate the use of Redirect.\nNote: You don't need to work on this file for the Assignment.\n==================================================*/\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nclass LogIn extends Component {\n  constructor (props) {  // Create and initialize state\n    super(props)\n    this.state = {\n      user: {\n        //userName: '',\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\n        password: ''\n      },\n      redirect: false  // Redirect property used to trigger Redirect\n    }\n  }\n\n  // When User Name input is changed, capture the new input value and update state\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}  // Create an object for state\n    updatedUser.userName = e.target.value  // Set object's userName to the new input value\n    this.setState({user: updatedUser})  // Update state with object values\n  }\n\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\n    this.setState({redirect: true})  // Update state to trigger Redirect\n  }\n  \n  render () {\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\n    if (this.state.redirect) {  \n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\n    return (\n      <div>\n        <h1>Login</h1>\n        \n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label>User Name</label>\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\n          </div>\n          <div>\n            <label>Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>  \n        <br/>\n        <Link to=\"/\">Return to Home</Link>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","/*==================================================\nsrc/components/Credits.js\n\nThe Credits component contains information for Credits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { Link } from \"react-router-dom\";\n\nconst Credits = (props) => {\n  return (\n    <div>\n      <h1>Credits</h1>\n      <br />\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n};\n\nexport default Credits;\n","/*==================================================\nsrc/components/Debits.js\n\nThe Debits component contains information for Debits page view.\nNote: You need to work on this file for the Assignment.\n==================================================*/\nimport { Link } from \"react-router-dom\";\n\nconst Debits = (props) => {\n  // Create the list of Debit items\n  let debitsView = () => {\n    const { debits } = props;\n    return debits.map((debit) => {\n      // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\n      let date = debit.date.slice(0, 10);\n      return (\n        <li key={debit.id}>\n          {debit.amount} {debit.description} {date}\n        </li>\n      );\n    });\n  };\n  // Render the list of Debit items and a form to input new Debit item\n  return (\n    <div>\n      <h1>Debits</h1>\n\n      {debitsView()}\n\n      <form onSubmit={props.addDebit}>\n        <input type=\"text\" name=\"description\" />\n        <input type=\"number\" name=\"amount\" />\n        <button type=\"submit\">Add Debit</button>\n      </form>\n      <br />\n      <Link to=\"/\">Return to Home</Link>\n    </div>\n  );\n};\n\nexport default Debits;\n","/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n// Import other components\nimport Home from \"./components/Home\";\nimport UserProfile from \"./components/UserProfile\";\nimport LogIn from \"./components/Login\";\nimport Credits from \"./components/Credits\";\nimport Debits from \"./components/Debits\";\n\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n    this.state = {\n      accountBalance: 1234567.89,\n      credits: [],\n      debits: [],\n      creditsLoaded: false,\n      debitsLoaded: false,\n      currentUser: {\n        userName: \"Joe Smith\",\n        memberSince: \"11/22/99\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://moj-api.herokuapp.com/debits\")\n      .then((res) => res.json())\n      .then((json) => {\n        this.setState({\n          debits: json,\n          debitsLoaded: true,\n        });\n      });\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {\n    const newUser = { ...this.state.currentUser };\n    newUser.userName = logInInfo.userName;\n    this.setState({ currentUser: newUser });\n  };\n\n  // Create Routes and React elements to be rendered using React components\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => (\n      <Home accountBalance={this.state.accountBalance} />\n    );\n    const UserProfileComponent = () => (\n      <UserProfile\n        userName={this.state.currentUser.userName}\n        memberSince={this.state.currentUser.memberSince}\n      />\n    );\n    const LogInComponent = () => (\n      <LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />\n    );\n    const CreditsComponent = () => <Credits credits={this.state.credits} />;\n    const DebitsComponent = () => <Debits debits={this.state.debits} />;\n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/Assignment4-bankofreact\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent} />\n          <Route exact path=\"/userProfile\" render={UserProfileComponent} />\n          <Route exact path=\"/login\" render={LogInComponent} />\n          <Route exact path=\"/credits\" render={CreditsComponent} />\n          <Route exact path=\"/debits\" render={DebitsComponent} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/*==================================================\nsrc/index.js\n\nThis file renders the top-level component App which contains all components of the app).\n==================================================*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}